pipeline {
    agent any

    environment {
        SONAR_URL = "http://98.83.209.213:9000"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero-Mohan"
        GIT_USER_NAME = "mohan0900"
        DOCKER_IMAGE = "mohan0900/spring-boot-app:${BUILD_NUMBER}"
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/mohan0900/Jenkins-Zero-To-Hero-Mohan.git'
            }
        }

        stage('Build and Test') {
            agent {
                docker {
                    image 'maven:3.9.9-eclipse-temurin-17'
                    args '--user root'
                }
            }
            steps {
                sh '''
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn clean package
                '''
            }
        }

        stage('Static Code Analysis') {
            agent {
                docker {
                    image 'maven:3.9.9-eclipse-temurin-17'
                    args '--user root'
                }
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t ${DOCKER_IMAGE} .
                        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                        docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "mohan0900@gmail.com"
                        git config user.name "Mohan Raj"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
